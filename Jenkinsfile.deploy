pipeline {
    agent {
        label 'docker-agent' // Ensure this agent has Docker and AWS CLI installed
    }

    environment {
        dockerUser = credentials('dockerhub-username')  // store as secret text
        registry = "${dockerUser}/mypython-app-may20"    // DockerHub repo
        registryCredential = 'dockerhub'                 // Jenkins credentials ID for DockerHub
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[url: 'https://github.com/bharatAmeria/lambda_deployment.git']]
                ])
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
                }
            }
        }

        stage('Upload Image to DockerHub') {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Remove Local Docker Image') {
            steps {
                script {
                    sh "docker rmi ${registry}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    kubernetesDeploy(
                        configs: 'k8s-deployment.yaml',
                        kubeconfigId: 'K8S',
                        enableConfigSubstitution: true
                    )
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up the Docker system...'
            sh 'docker system prune -f'
        }
    }
}
