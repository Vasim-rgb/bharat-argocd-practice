// @Library("shared") _
pipeline {
    agent any 

    environment {
        VENV_DIR = "pred"  
    }

    triggers {
        pollSCM('* * * * *')  
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/bharatAmeria/lambda_deployment.git'
            }
        }

        stage('Setup Environment') {
            steps {
                sh 'python3 -m venv $VENV_DIR'
                sh './$VENV_DIR/bin/pip install -r requirements.txt'
            }
        }

        stage('Test Environment') {
            steps {
                sh './$VENV_DIR/bin/python testEnvironment.py'
            }
        }

        stage('Data Ingestion') {
            steps {
                sh './$VENV_DIR/bin/python src/pipeline/stage01_data_ingestion.py'
            }
        }

        stage('Data Pre Processing') {
            steps {
                sh './$VENV_DIR/bin/python src/pipeline/stage02_data_processing.py'
            }
        }

        stage('Model Training') {
            steps {
                sh './$VENV_DIR/bin/python src/pipeline/stage03_model_training.py'
            }
        }
    }

    post {
        success {
            echo '‚úÖ  Training Pipeline completed successfully!'
            echo "üöÄ Triggering deployment job..."
            // build job: 'deployment-job'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs.'
        }
    }
}
